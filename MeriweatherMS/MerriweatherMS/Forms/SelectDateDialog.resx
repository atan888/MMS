<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAACABoBQAAJgAAACAgAAAAAAgAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAgICAAXFxcAJycnADc3NwBHR0cAV1dXAGdnZwB3d3cAh4eHAJeX
        lwCnp6cAt7e3AMfHxwDX19cA5+fnAPf39wAAAEwAAAB/AAAAsgAAAOUAGRn/AExM/gB/f/8AsrL/AAAQ
        TAAAG38AACayAAAx5QAZSv8ATHL+AH+a/wCywv8AACBMAAA2fwAATLIAAGLlABl7/wBMmf4Af7b/ALLT
        /wAAMUwAAFF/AABysgAAk+UAGa3/AEy//gB/0f8AsuP/AABBTAAAbX8AAJmyAADE5QAZ3v8ATOX+AH/s
        /wCy9P8AAExHAAB/dgAAsqUAAOXVABn/7gBM/vIAf//1ALL/+QAATDYAAH9bAACyfwAA5aMAGf+9AEz+
        zAB//9oAsv/pAABMJgAAfz8AALJZAADlcgAZ/4wATP6lAH//vwCy/9gAAEwVAAB/JAAAsjMAAOVBABn/
        WwBM/n8Af/+jALL/yAAATAUAAH8JAACyDAAA5RAAGf8pAEz+WQB//4gAsv+3AApMAAASfwAAGbIAACDl
        AAA6/xkAZv5MAJH/fwC9/7IAG0wAAC1/AAA/sgAAUeUAAGv/GQCM/kwArf9/AM3/sgArTAAASH8AAGWy
        AACD5QAAnP8ZALL+TADI/38A3v+yADxMAABkfwAAjLIAALTlAADN/xkA2P5MAOP/fwDu/7IATEwAAH9/
        AACysgAA5eUAAP//GQD+/kwA//9/AP//sgBMPAAAf2QAALKMAADltAAA/80ZAP7YTAD/438A/+6yAEwr
        AAB/SAAAsmYAAOWDAAD/nBkA/rJMAP/IfwD/3rIATBsAAH8tAACyPwAA5VEAAP9rGQD+jEwA/61/AP/N
        sgBMCgAAfxIAALIZAADlIAAA/zoZAP5lTAD/kX8A/72yAEwABQB/AAkAsgAMAOUAEAD/GSkA/kxZAP9/
        iAD/srcATAAVAH8AJACyADIA5QBBAP8ZWwD+TH8A/3+jAP+yyABMACYAfwA/ALIAWQDlAHIA/xmMAP5M
        pQD/f78A/7LYAEwANgB/AFsAsgB/AOUAowD/Gb0A/kzMAP9/2gD/sukATABHAH8AdgCyAKUA5QDVAP8Z
        7gD+TPIA/3/1AP+y+QBBAEwAbQB/AJkAsgDEAOUA3hn/AOVM/gDsf/8A9LL/ADEATABRAH8AcgCyAJMA
        5QCtGf8Av0z+ANF//wDjsv8AIABMADYAfwBMALIAYgDlAHsZ/wCZTP4Atn//ANOy/wAQAEwAGwB/ACYA
        sgAxAOUAShn/AHJM/gCaf/8AwrL/AKKioqKioqmhqKihoqKioqKioqKioqGrHx8fH6iioqKioqKioqEf
        Hx+ivR8foqKioqKioqK9Hx8XoqIfH66hoqKioqKoHx8fH6mioqKioqKioqKiqx8fHx8fqqKpoqKioqKi
        ohcfHx8fHx8fqaKioqKioqKiHx8fHx8fHx+poqKiF6KioaIfHx8fHx8foqKioqKioh+hoqwfHx8fH6Ki
        oqKioqwfoaKioqKioqKioqKioqKioqgfF6KioqIfrqGioqKioqKrH6K9H6KiHx8foaKioqKioqKioh+i
        oh8fH6qioqKioqKioqKioqKioqKioqKioqKioqqioqKioqKioqIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAiHhcAJB8YAAwgHQAbIx4ALCQbADIjGQA9JBgANSkfAAYk
        IwAOIyEAAi4uABMnJAATKCUAEC8sAAkxMAAEODgAHDc0AEYnGQBIJhgAQiweAEwqGwBULBsAXCwZAGMt
        GAByLxgAbTEbAHY2HQB5NBsAUjEgAGo9LgB5NyEAdjkjAHw5IwByPCoAWEE1AH9DKgBrQjQAaUQ4AHVT
        PgAEQkEACkRDAAxPTgAFUlIACVJSAANaWgALXV0AAGFhAAtjYwAAbW0AAHR0AAF/fwAUfX0AGn19AFJO
        QgBAUk4AVVNHAFxbUwBtS0AAbVRMAHdTSAB6VksAfFhNAGtXUAB1XlcAb2JXAHJiUQB0YlwAemlkAHtt
        aQB7cW8AizcaAIQ4HwCMOBwAlDkbAJ46GQCgPRwAgjkhAIo8IQCTPyIAmj8hAIVBKACWQicAlkQoAJ5I
        LACETzoAhlQ+AKNDIwChSS0Ap1M3AKpSNQCuWDcArFc7AK5aPQCyYD4Aq11CAIdiTgCDYlAApWVNALNj
        RAC1Z00AtWhOAKNsUACvdVYAo3VaALh1VAC1elsAunxbAIFtZwCAcWwAlHhmAIB3dQCFeXQAiXt4AL57
        ZQDAfFoAwH5nAI6BegCShH0Ao4NpAKeLcgDCgF0AxYdlAMGBbADIjGkAxYl1AMOUdQDMlXMAzph2AMmQ
        fgDGm3wAyZt7ANGefADSoX8ADISEAAKNjQAdhoYABZmZABeTkwAdlpYAFJycACKdnQAompoAAKCgAAC1
        tQAooaEAKa2tACuxsQAqu7sAU46NAHWgnwB1pqUAAMfHAALW1gA6wsIAOM7OAADq6gAB8/MAAPv7AAv9
        /QAU/f0AGf39ADzh4QAj/v4AK/7+ADD//wA8//8AVsPDAFjGxgBK2NgAYtLSAGzZ2ABV4uIAXevrAET1
        9QBF/v4AS/39AF3x8QBV//8AX///AG339wBk/f0Aa/7+AHL+/gB7/v4Ai4OBAJaJggCSi4oAlpGNAIaW
        lQCZk5IAlZ2bAL6fhACim5YAo5yaAKujmwCdqagAn7i3AKukpACnqacAqqmmAKKrqQCuqqoAtKumAL2t
        pQCyrawAoLW0AKC+vQC2s7MAubS0AL25uQDFl4cAy5WDAMqbigDTpIIA06uLANGgkADVqpwAxq+mANeu
        oADJsKcA1LGlANiypQDEvLwAyL+/AMjAvwCEwMAAm9vbAKPIyACn0M8AptraAIz9/QCc/v4Aq+TkALHn
        5wCk/v4AuvT0ALb+/gC8/PwAxMLCAMrExADLy8sA0szMANXT0wDZ1NQA29nZAODc2wDF/v4Ay/7+ANL/
        /wDk5OMA6ufnAOzr6wDw7u4A9PPzAPv7+wBmZmZmZmZmZmZmZmZmZlZWU1NWVmBgYGBWVlZWVlZWVmZm
        ZmZmZmZmZmZmZllTd9zy3sBWUWBgVmBWVlZWVlZWZmZmZmZmZmZmZmJUwP7+/v7+/v7yVlZgVmBWYFZW
        VlZmZmZmZmZmZmZWZvT+/v7+/v7+/v7+aFZWYGBWYFZWVmZmZmZmZmZmVmr+/v7+/v7+/v7+/v78ZlZg
        YGBWVlZWZmZmZmZmZmJo/v7+/v7+12Zo9v7+/v70U2BgYFZWYFZmZmZmZmZmVP7+/v7+/sBUYlPA/v7+
        /v5oVmBgYGBWYGZmZmZmZlT0/v7+/v7+aFZmVmr+/v7+/tpWYGBWYGBgZmZmZmZfev7+/v7+/v7eU2Jm
        VsDy+vz2aFZgYGBgYFZmZmZmZlT0/v7+/v7+/v70U1ZmVGJmaGZWYGBgYGBWYGZmZmZmZvr+/v7+/v7+
        /v78aFNiYl9gYmBgYGJgYGBgZmZmZl9q/f7+/v7+/v7+/v7+4WZZZmZmYmZgYGBgYGBmZmZmYmr9/v7+
        /v7+/v7+/v7+/n5UYmZiYmZgYGBgYGZmZmZfavz+/v7+/v7+/v7+/v7+/txWYGZiYmJiYGBgZmZmZmZU
        +v7+/v7+/v7+/v7+/v7+/t5WYmJiZmZgYGBmZmZmZmZm/v7+/v7+/v7+/v7+/v7+/tVWZmJiZmZiYmdm
        ZmZmZlnA/v7+/v7+/v7+/v7+/v7+/lRmZmJiZmJgZmdmZmZfWVnA/f7+/v7+/v7+/v7+/v7+VGJmZmZi
        ZmJnZ2hmWX7yYl9m3v7+/v7+/v7+/v7+/tdWZmJmZmJiYGdnZ1/A/v5ZZmZZVNf6/v7+/v7+/v7XWWZm
        ZmZmZmJmZ2dmZv7+/llmX19mWVRZan7AwMBqU1NiZmZmZmZmYmJnZ2Zn/v7+X2bX4WJmZmJZYllZWVTA
        eFRfZmZmYmZmYmdnZmb8/n5ea/7+a19mX35UZmZU4f7++mZUZmZmYmZmZ2dnZl5eZl/y/v7XWWb0/n5Z
        Zln+/v7+/sBUZmZmZmZnZ2dnZ2dnX/7+/tdZfv7+/mJiZv7+/v7+/sBWZmZmZmdnZ2dnZ2de/f7+Z1nA
        /v7+1VlU/v7+/v7+/mdiZmZmZ2dnZ2dnZ2Z69NtfYsD+/v7eWVT2/v7+/v7+8llmZmZnZ2dnZ2dnZ2Zm
        ZmZfwP7+/vJZZmb+/v7+/v7+VmZmZmdnZ2dnZ2dnZ2ZmZ2Zf3v76a19mX2r+/v7+/v5mYmZmZ2dnZ2dn
        Z2dnZ2dmZ2ZZZ2ZfZmZmWXfy/f7+9F9mZmZnZ2dnZ2dnZ2dnZ2ZnZ2ZmZmZmZmZmX2JqeHdiZmZmZmdp
        Z2dnZ2dnZ2dnZ2dnZ2ZmZmZmZmZmZmJiYmZmZmZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>